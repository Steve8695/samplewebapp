# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release

stages:

- stage: Build

  jobs:

    - job: Build

      steps:


      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        inputs:
          restoreSolution:  SampleWebApplication/CodeForAzureDevOps.sln
      
      - task: SonarQubePrepare@5
        inputs:
          SonarQube: 'Sonarqube-Az'
          scannerMode: 'MSBuild'
          projectKey: 'Demo-Steve_Demo-Steve'
          projectName: 'Demo-Steve_Demo-Steve'

      - task: VSBuild@1
        inputs:
          solution: SampleWebApplication/CodeForAzureDevOps.sln
          msbuildArgs: '/p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl="$(Agent.TempDirectory)\WebAppContent\\"'
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'
      - task: ArchiveFiles@2
        displayName: 'Archive Files'
        inputs:
        rootFolderOrFile: '$(Agent.TempDirectory)\WebAppContent'
        includeRootFolder: false

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'webappartifact'
          publishLocation: 'Container'
        

        
      - task: SonarQubeAnalyze@5
      - task: SonarQubePublish@5
        inputs:
          pollingTimeoutSec: '300'
      
      
      - task: VSTest@2
        inputs:
          testSelector: 'testAssemblies'
          testAssemblyVer2: |
            **\UnitTestForAzureDevOps.dll
            !**\*TestAdapter.dll
            !**\obj\**
            # **\UnitTestForAzureDevOps\**\**\*TestAdapter.dll
            # **\UnitTestForAzureDevOps\obj\**
          searchFolder: '$(System.DefaultWorkingDirectory)'
          runTestsInIsolation: true
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'

      - task: PublishSymbols@2
        displayName: 'Publish symbols path'
        inputs:
        SearchPattern: '**\bin\**\*.pdb'
        PublishSymbols: false
        continueOnError: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        condition: succeededOrFailed()
        

- stage: Dev_Deployment
  dependsOn: [Build]
  condition: succeeded('Build')
  jobs: 
  - deployment: dev_deploy_job
    pool:
      vmImage: 'windows-latest'

    environment:
      name: Demo-env
      resourceType: Virtualmachine
    strategy:
     runOnce:
       deploy: 
          steps:      
          
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                buildVersionToDownload: 'latest'
                targetPath: '$(build.artifactStagingDirectory)'
              
            - task: IISWebAppManagementOnMachineGroup@0
              inputs:
                IISDeploymentType: 'IISWebsite'
                ActionIISWebsite: 'CreateOrUpdateWebsite'
                WebsiteName: 'default website'
                WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
                WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'

            - task: IISWebAppDeploymentOnMachineGroup@0
              inputs:
                WebSiteName: 'default website'
                Package: '$(build.artifactStagingDirectory)\**\*.zip'
                RemoveAdditionalFilesFlag: true
                ExcludeFilesFromAppDataFlag: true
                TakeAppOfflineFlag: true
                XmlTransformation: true
                XmlVariableSubstitution: true
      
